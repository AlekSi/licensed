#!/bin/bash
#/ Usage: script/packages/linux [VERSION]
#/
#/ WARNING: You should not need to call this directly. Please create packages using
#/ `script/package [platform]` or `bundle exec rake package[platform]`
#/
#/ Builds a linux distributable package for licensed for a given and licensed VERSION.
#/ Packages are of the form licensed-$VERSION-linux-x64.tar.gz and contain a `./licensed` executable
#/ Built packages are placed in the <root>/pkg directory.
#/
#/ If calling from a non-linux OS, docker is used to build a linux binary
#/
#/ OPTIONS:
#/   [VERSION]         (optional, default to current git branch or SHA1) version of licensed to build exe at
#/

set -euo pipefail

BASE_DIR="$(cd "$(dirname $0)/../.." && pwd)"
VERSION=${VERSION:=""}

build_linux_docker() {
  IMAGE="licensed/build-linux"
  docker build -t "$IMAGE" - < "$BASE_DIR/docker/Dockerfile.build-linux"
  docker run --rm \
    -e VERSION="$VERSION" \
    -v "$BASE_DIR":/var/licensed \
    -w /var/licensed \
    "$IMAGE" \
    "script/build-rubyc-exe"
}

build_linux_local() {
  sudo apt-get update && \
       apt-get install -y --no-install-recommends cmake make gcc pkg-config squashfs-tools curl bison git

  if [ ! -f "$BASE_DIR/bin/rubyc-linux" ]; then
    mkdir -p "$BASE_DIR/bin"
    curl -L http://enclose.io/rubyc/rubyc-linux-x64.gz | gunzip > "$BASE_DIR/bin/rubyc-linux"
    chmod +x "$BASE_DIR/bin/rubyc-linux"
  fi

  export CPPFLAGS="-P"
  RUBYC="$BASE_DIR/bin/rubyc-linux" "$BASE_DIR"/script/build-rubyc-exe
}

if [[ "$(uname -s)" != "Linux" ]]; then
  build_linux_docker
else
  build_linux_local
fi
